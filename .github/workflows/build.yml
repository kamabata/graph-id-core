name: Build Wheels

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"
          CIBW_SKIP: "*musllinux*"  # Skip musl Linux builds if spglib doesn't work well
          CIBW_ARCHS: "auto64"
          CIBW_BEFORE_BUILD_LINUX: "rm -rf {project}/build"
          CIBW_BEFORE_BUILD_MACOS: "rm -rf {project}/build"
          CIBW_BEFORE_BUILD_WINDOWS: "if exist build rmdir /s /q build"
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.15
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/graph_id/tests/ -v"
          # Test on a subset of Python versions to speed up CI
          CIBW_TEST_SKIP: "cp36-* cp37-*"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build sdist
        run: poetry build --format=sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

